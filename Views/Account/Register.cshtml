@model ELearning.Models.RegisterViewModel
@{
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
    ViewBag.Title = "Student Registration";
}

<!-- Page Title -->
<div class="page-title" data-aos="fade">
    <div class="heading">
        <div class="container">
            <div class="row d-flex justify-content-center text-center">
                <div class="col-lg-8">
                    <h1>@ViewBag.Title</h1>
                    <p class="mb-0">Enter your personal details to create account</p>
                </div>
            </div>
        </div>
    </div>
</div><!-- End Page Title -->
<!-- Student Registration Section -->
<section id="contact" class="contact section">

    <div class="container" data-aos="fade-up" data-aos-delay="100">

        <div class="row justify-content-md-center">

            <div class="col col-sm-4">&nbsp;</div>
            <div class="col col-sm-4 ">

                @Html.Raw(ViewData["AlertMessage"])

                @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "row g-3 mt-2" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.UserType)
                    <div class="col-12">
                        <label for="yourName" class="form-label">Your Name</label>
                        @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", required = "", autocomplete="off" }) 
                        @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "custom-invalid-feedback" })
                    </div>

                    <div class="col-12">
                        <label for="yourEmail" class="form-label">Your Email</label>
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", type = "email" }) 
                    </div>

                    <div class="col-12">
                        <label for="yourUsername" class="form-label">Username</label>
                        <div class="input-group has-validation">
                            <span class="input-group-text" id="inputGroupPrepend"><i class="bi bi-person"></i></span>
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", required = "", autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "custom-invalid-feedback" })
                        </div>
                    </div>

                    <div class="col-12">
                        <label for="yourEmail" class="form-label">Class</label>
                        @Html.DropDownListFor(m => m.ClassID, new SelectList(Model.ClassList, "Value", "Text"), "-- Select --", new { @class = "form-select", required = "" })
                        @Html.ValidationMessageFor(m => m.ClassID, "", new { @class = "custom-invalid-feedback" })
                    </div>

                    <div class="col-12">
                        <label for="yourPassword" class="form-label">Password</label>
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", required = "" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "custom-invalid-feedback" })
                    </div>

                    <div class="col-12">
                        <button class="btn btn-success w-100" type="submit">Create Account</button>
                    </div>
                    <div class="col-12">
                        <p class="small mb-0">Already have an account? <a href="@Url.Action("Login", "Account")">Log in</a></p>
                    </div>
                }
            </div><!-- End Student Registration Form -->
            <div class="col col-sm-4">&nbsp;</div>

        </div>

    </div>

</section><!-- /Student Registration Section -->

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
